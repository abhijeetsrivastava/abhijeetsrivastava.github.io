<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-09-13T09:53:02+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">A techie blog!</title><subtitle>Having written a lot of &quot;Hello World&quot; programs, I want to share my experiences with the world. Let's have fun!</subtitle><author><name>Abhijeet Srivastava</name></author><entry><title type="html">Programmers best friend IDE</title><link href="http://localhost:4000/programming/programmers-best-friend/" rel="alternate" type="text/html" title="Programmers best friend IDE" /><published>2020-09-13T00:00:00+05:30</published><updated>2020-09-13T00:00:00+05:30</updated><id>http://localhost:4000/programming/programmers-best-friend</id><content type="html" xml:base="http://localhost:4000/programming/programmers-best-friend/">&lt;h1 id=&quot;a-programmer-needs-a-good-ide&quot;&gt;A programmer needs a good IDE&lt;/h1&gt;

&lt;p&gt;A good IDE is a programmers best friend. Writing clean code requires one
to spend time in their code base and to have a look and feel of various
parts of code. Search files, syntax highlighting, completions, renaming,
formatting with fmt flavored styles etc are few of the many things that
programmers rely on to write clean code.&lt;/p&gt;

&lt;p&gt;Its of paramount importance that one knows their own IDE same as they
would know about the car they drive. I mean, one does NOT needs to be
know everything about their car to drive it, but then the ones that know
everything about their car are the one of the best drivers. Same applies
to IDEs as well.&lt;/p&gt;

&lt;p&gt;The process one follows from choosing an IDE of their liking starts from
early days. We usually use the ones our peers or seniors are using at a
project or a company and then we get to pick the flavors/features of
IDEs that they rely on.&lt;/p&gt;

&lt;h1 id=&quot;things-i-look-for-in-an-ide&quot;&gt;Things I look for in an IDE&lt;/h1&gt;

&lt;p&gt;I am a concious programmer. I like to review the code I wrote previously
to see if I can refactor it or if its idomatic. In order for me to do so
I use certain features of an IDE.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Return types of functions - This is fairly obvious. One needs this to be able to
club functions together.&lt;/li&gt;
  &lt;li&gt;Code duplication - Some IDEs offer &lt;a href=&quot;https://www.jetbrains.com/help/idea/find-and-replace-code-duplicates.html&quot; title=&quot;Intellij code duplication&quot;&gt;code duplication blocks&lt;/a&gt;.
One should use these blocks to figure out possible refactoring.&lt;/li&gt;
  &lt;li&gt;Code formatting - Specially useful when a lot of people are working in the
same repository and in general its good practice to use a code formatter to
enforce idiomatic code styles. I usually try and use the default formatter
for a language. If at all, I customize it based on some other popular
company (like &lt;a href=&quot;https://github.com/twitter/rsc/blob/master/.scalafmt.conf&quot; title=&quot;scalafmt&quot;&gt;twitter&lt;/a&gt;, &lt;a href=&quot;https://github.com/airbnb/javascript&quot; title=&quot;javascript fmt&quot;&gt;airbnb&lt;/a&gt; etc).&lt;/li&gt;
  &lt;li&gt;Jump to definition/ references - One of the most important features for
development or debugging a code. One should be able to move seamlessly
between references and definitions.&lt;/li&gt;
  &lt;li&gt;Syntax highlighting and others are useful features which should be easily available.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;my-ide-journey&quot;&gt;My IDE journey&lt;/h1&gt;

&lt;p&gt;My java development started with Eclipse where I also tried Netbeans, BlueJ, DrJava
and a few others. Most of these IDEs are for java (DrJava) so I am going to
stick to IDEs that are not limited to a particular language.&lt;/p&gt;

&lt;h2 id=&quot;eclipse&quot;&gt;Eclipse&lt;/h2&gt;

&lt;p&gt;Best first editor. My reason was it was being used by my peers and seniors and I
had help if I needed anything. I was a junior developer and cared less about
IDEs and more about startup time of my server. Those were fun days where I had
to use slow local setup.&lt;/p&gt;

&lt;h2 id=&quot;sublime&quot;&gt;Sublime&lt;/h2&gt;

&lt;p&gt;During my masters journey, most of my time was spent learning and writing code.
I could not be bothered with learning new tools or IDEs. Eclipse is bulky and
might not be best for other languages.&lt;/p&gt;

&lt;p&gt;My Solution? use a text based editor I was familiar with - Sublime. Sublime has
an active community with a lot of useful plugins.&lt;/p&gt;

&lt;p&gt;To be able to use sublime as an IDE it has&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Tree based dir&lt;/li&gt;
  &lt;li&gt;Search/replace via regex&lt;/li&gt;
  &lt;li&gt;Sidebar with useful info&lt;/li&gt;
  &lt;li&gt;Git plugins, I mostly used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git diff &amp;amp; git blame&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Sort imports, linting, syntax highlighting etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And then I used terminal for&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Code formatting&lt;/li&gt;
  &lt;li&gt;Server&lt;/li&gt;
  &lt;li&gt;Git based commands for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;commit, push, rebase&lt;/code&gt; etc.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why would one use sublime?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The biggest advantage was that the same setup would work for Coffeescript,
Typesript, python, Java, lisp, C++ and many others.&lt;/p&gt;

&lt;p&gt;This setup was so much easy to follow and thus I used it for almost 4 years.
This setup also made me more concious programmer and I was aware of things I
needed for effective coding.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What about Atom?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An alternative of this is Atom which is another powerful text editor which many
use as their personalized IDE.&lt;/p&gt;

&lt;h2 id=&quot;intellij&quot;&gt;Intellij&lt;/h2&gt;

&lt;p&gt;I started using it when I was going to write most of my code in Java/Scala.&lt;/p&gt;

&lt;p&gt;There are only few things I can say in its favor. Intellij is one of the best
IDEs out there with most features. In their latest release of Intellij 2020.2
they even had &lt;a href=&quot;https://blog.jetbrains.com/scala/2020/07/16/intellij-scala-plugin-2020-2-auto-import-for-implicits/&quot; title=&quot;intellij release notes&quot;&gt;auto-import for implicits&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;They have the most seamless build imports and then one would get all the
features for a language.&lt;/p&gt;

&lt;p&gt;I would recommend one to use Intellij when learning a new language. Intellij
recommends idiomatic way of writing the same code in a language. To use a new
language in Intellij one can install the intellij’s language plugin for it and
would get all the features.&lt;/p&gt;

&lt;p&gt;Awesome! Isn’t it?&lt;/p&gt;

&lt;h2 id=&quot;vim&quot;&gt;VIM&lt;/h2&gt;

&lt;p&gt;Having used Intellij for almost a year, I wanted to try VIM.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Motivation&lt;/strong&gt; : I wanted to try digitizing my notes and was looking at various
text editors and how others do it. Vim was a good choice.&lt;/p&gt;

&lt;p&gt;Vim was the &lt;a href=&quot;https://insights.stackoverflow.com/survey/2019#technology-_-most-popular-development-environments&quot; title=&quot;stackoverflow 2019 survey&quot;&gt;5th most popular
IDE&lt;/a&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stackoverflow&lt;/code&gt; 2019 survey. So I decided to
give it a try.&lt;/p&gt;

&lt;p&gt;My setup-&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Vim has language support via plugins.&lt;/li&gt;
  &lt;li&gt;I used plugins for autocomplete, fuzzysearch, tags, etc.&lt;/li&gt;
  &lt;li&gt;I build my scala project using &lt;a href=&quot;https://scalameta.org/metals/&quot; title=&quot;scalameta.org&quot;&gt;metals&lt;/a&gt; as a &lt;a href=&quot;https://microsoft.github.io/language-server-protocol/&quot; title=&quot;definition&quot;&gt;LSP&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;I had all the IDE features available in VIM.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Other than the project&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;I was able to use VIM effectively for digital note taking.&lt;/li&gt;
  &lt;li&gt;I used markdown.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;Disadvantage&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VIM took time getting used to. But felt like it was worth it. I would certainly
not learn a new langauge in VIM but then move to VIM after I am comfortable with it.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Is VIM an ide?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;VIM is a good text editor, and no one had any opinion regarding a text editor
before. Its not an IDE, but one can configure VIM for the features one mostly
uses in an IDE.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why use it?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I personally felt increase in productivity since I was now getting more aware
as a developer. Whenever I thought I needed a new feature I had to think hard
about what I want to do with it and then I would use it effectively since I spent time thinking
about the feature and its uses for myself.&lt;/p&gt;

&lt;h2 id=&quot;emacs&quot;&gt;Emacs&lt;/h2&gt;

&lt;p&gt;Recently after using VIM for almost 6 months, I wanted to try emacs but was
afraid to use it based on reviews I read which mentions that emacs is tought to
get onboarded with.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Then comes the &lt;a href=&quot;https://github.com/emacs-evil/evil&quot; title=&quot;evil-mode&quot;&gt;emacs-evil&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once I was used to basic navigation and workflow in vim it took me almost 1 week
to transition to emacs.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Well, why not?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Digital note taking moved to org-mode, which I think is more powerful and seems
like Evernote to me.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Is it better than vim?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I had same setup with VIM and it works almost the same. I was able to set it up
much easily and use it for projects within a week.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;My thoughts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I do not think every VIM user should move to emacs but emacs isn’t bad either.
Org-mode lured me to use emacs and then I found language setup is also seemless
in emacs. The easy setup in emacs (almost like Intellij) was something I liked.&lt;/p&gt;

&lt;h1 id=&quot;is-my-journey-over&quot;&gt;Is my journey over?&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;No&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am planning to try the most popular IDE based on stackoverflow 2019 survey -
&lt;a href=&quot;https://insights.stackoverflow.com/survey/2019#technology-_-most-popular-development-environments&quot; title=&quot;stackoverflow 2019 survey&quot;&gt;Visual Studio&lt;/a&gt;. Right now I am still experimenting with emacs and
then will setup my workflow before trying out VS next year.&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;My workflow isn’t the best and it doesn’t have everything, but certainly it has
everything I need to be efficient and productive.&lt;/p&gt;

&lt;p&gt;I do not want to stick to one particular tool (an IDE) and keep trying different
workflows to understand what I lack and be able to include it in my workflow.&lt;/p&gt;

&lt;p&gt;Some of the IDEs I have tried have been text editors which can be used as IDE by use
of plugins which provides best flexibility.&lt;/p&gt;

&lt;p&gt;My advice would be for one to figure out the features they mostly use and also
keep looking at other tools for the features that they are missing.&lt;/p&gt;

&lt;p&gt;Keep coding!&lt;/p&gt;</content><author><name>Abhijeet Srivastava</name></author><category term="programming" /><summary type="html">A programmer needs a good IDE</summary></entry><entry><title type="html">Is this another blog?</title><link href="http://localhost:4000/about/is-this-another-blog/" rel="alternate" type="text/html" title="Is this another blog?" /><published>2020-07-21T00:00:00+05:30</published><updated>2020-07-21T00:00:00+05:30</updated><id>http://localhost:4000/about/is-this-another-blog</id><content type="html" xml:base="http://localhost:4000/about/is-this-another-blog/">&lt;h1 id=&quot;is-this-another-blog&quot;&gt;Is this another blog?&lt;/h1&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Having written a lot of hello world programs I want to share my experience with
other developers. I could use feedback from peers.&lt;/p&gt;

&lt;p&gt;I am going to document &lt;em&gt;code snippets&lt;/em&gt;, &lt;em&gt;concepts&lt;/em&gt;, &lt;em&gt;tech news&lt;/em&gt;, &lt;em&gt;interview
tips&lt;/em&gt;, and a few random stuff.&lt;/p&gt;

&lt;p&gt;I will provide a platform to request topics, and or share ideas with me in
future. But let’s start with baby steps.&lt;/p&gt;

&lt;p&gt;So, Hey!&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/assets/world.gif?raw=true&quot; alt=&quot;Hello World&quot; /&gt;
&lt;/p&gt;</content><author><name>Abhijeet Srivastava</name></author><category term="welcome" /><category term="blog" /><summary type="html">Is this another blog?</summary></entry><entry><title type="html">How to remove null from code?</title><link href="http://localhost:4000/programming/the-one-with-null/" rel="alternate" type="text/html" title="How to remove null from code?" /><published>2020-07-21T00:00:00+05:30</published><updated>2020-09-11T00:00:00+05:30</updated><id>http://localhost:4000/programming/the-one-with-null</id><content type="html" xml:base="http://localhost:4000/programming/the-one-with-null/">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Scala: Though the concepts mentioned in this post are related to Scala, they
are universal.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Thought:&lt;/strong&gt; A program should not use null.&lt;/p&gt;

&lt;p&gt;Null, if not handled, can be troublesome just like an unhandled exception. One
should actively try and avoid its usage.&lt;/p&gt;

&lt;p&gt;Here are a couple of ways to avoid them.&lt;/p&gt;

&lt;h1 id=&quot;how-to-avoid-them&quot;&gt;How to avoid them?&lt;/h1&gt;

&lt;h2 id=&quot;without-initial-default-value&quot;&gt;Without initial default value&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;What to do when a var field in a class or method doesn’t have an initial default value?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: Initialize it with Option instead of null.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;student&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;when-a-method-doesnt-produce-the-intended-result&quot;&gt;When a method doesn’t produce the intended result&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;You may be tempted to return null.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Soulution&lt;/strong&gt;: Use an Option or Try instead.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;Source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;fromFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;getLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;File does NOT exist&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;None&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;trysuccessfailure-approach&quot;&gt;Try/Success/Failure approach&lt;/h2&gt;

&lt;p&gt;This approach is also useful when using Futures.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;Try&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;Source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;fromFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;getLines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;/etc/passwd&quot;&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;lines&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Failure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-null-object-pattern&quot;&gt;The “Null Object” Pattern&lt;/h2&gt;

&lt;p&gt;Twitter Effective scala page recommends not overusing Option, and using the
Null Object Pattern where it makes sense.&lt;/p&gt;

&lt;p&gt;A Null Object is an objectthat extends a base type with a “null” or neutral
behavior.&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeSound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dog&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeSound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;woof&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NullAnimal&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;makeSound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;legacy-java-code&quot;&gt;Legacy Java Code&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: wrap it in an Option or Some&lt;/p&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;javaPerson&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;getName&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;tips&quot;&gt;Tips&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Map of Seq[Option[Object]] skips None values
    &lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Use flatten to convert Seq[Option[Object]] to Seq[Object]&lt;br /&gt;
  Useful for use it with other collections.
    &lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;py&quot;&gt;flatten&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Use match pattern&lt;br /&gt;
Similar to Try/Success/Failure
    &lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Some&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No such name&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Null can be easily mishandled and hence we should avoid its possibility in our
code. I have listed a few ways to do so.&lt;/p&gt;</content><author><name>Abhijeet Srivastava</name></author><category term="programming" /><summary type="html">Introduction</summary></entry></feed>